# Deploy preview for Pull Requests
name: Deploy Preview

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

# Sets permissions for deployment
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment per PR
concurrency:
  group: "preview-${{ github.event.number }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  # Build job for preview
  build-preview:
    runs-on: ubuntu-latest
    env:
      DART_SASS_VERSION: 1.89.2
      HUGO_VERSION: 0.148.0
      HUGO_ENVIRONMENT: development
      TZ: America/Los_Angeles
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: |
          wget -O ${{ runner.temp }}/dart-sass.tar.gz https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz
          tar -xf ${{ runner.temp }}/dart-sass.tar.gz --directory ${{ runner.temp }}
          sudo mv ${{ runner.temp }}/dart-sass/ /usr/local/bin
          echo "/usr/local/bin/dart-sass" >> $GITHUB_PATH
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Cache Restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: hugo-preview-${{ github.run_id }}
          restore-keys: hugo-preview-
      - name: Configure Git
        run: git config core.quotepath false
      - name: Build with Hugo for Preview
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://ridhitbhura.github.io/my-website/preview/pr-${{ github.event.number }}" \
            --cacheDir "${{ runner.temp }}/hugo_cache"
      - name: Cache Save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: preview-${{ github.event.number }}
          path: ./public
          retention-days: 7
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://ridhitbhura.github.io/my-website/preview/pr-${prNumber}`;

            const comment = `ðŸš€ **Preview deployment ready!**

            ðŸ“‹ **Build Summary:**
            - **PR #${prNumber}**: ${context.payload.pull_request.title}
            - **Branch**: \`${context.payload.pull_request.head.ref}\`
            - **Commit**: ${context.payload.pull_request.head.sha.substring(0, 7)}

            ðŸ”— **Preview URL**: ${previewUrl}

            > Preview will be available once the deployment completes.
            > This preview is automatically updated on every push to this PR.
            `;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Deploy to GitHub Pages preview folder
  deploy-preview:
    runs-on: ubuntu-latest
    needs: build-preview
    if: github.event.action != 'closed'
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download preview artifact
        uses: actions/download-artifact@v4
        with:
          name: preview-${{ github.event.number }}
          path: ./preview-temp
      - name: Setup preview directory
        run: |
          mkdir -p preview/pr-${{ github.event.number }}
          cp -r preview-temp/* preview/pr-${{ github.event.number }}/
          rm -rf preview-temp
      - name: Commit and push preview
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add preview/
          git commit -m "Deploy preview for PR #${{ github.event.number }}" || exit 0
          git push

  # Cleanup preview on PR close/merge
  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Remove preview directory
        run: |
          rm -rf preview/pr-${{ github.event.number }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Cleanup preview for PR #${{ github.event.number }}" || exit 0
          git push
